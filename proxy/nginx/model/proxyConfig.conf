server {
  # iMonnitTwilioConnector server
  listen 443 ssl;
  server_name ${IMONNIT_TWILIO_CONNECTOR_HOSTNAME};

  # ECDSA certs
  ssl_certificate /etc/letsencrypt/live/${IMONNIT_TWILIO_CONNECTOR_HOSTNAME}-ecc/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/${IMONNIT_TWILIO_CONNECTOR_HOSTNAME}-ecc/privkey.pem;

  # RSA certs
  ssl_certificate /etc/letsencrypt/live/${IMONNIT_TWILIO_CONNECTOR_HOSTNAME}-rsa/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/${IMONNIT_TWILIO_CONNECTOR_HOSTNAME}-rsa/privkey.pem;

  # DH param
  ssl_dhparam /etc/letsencrypt/dhparams/dhparam.pem;

  # cipher setup
  ssl_session_timeout 5m;
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_prefer_server_ciphers on;
  ssl_ciphers "EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:EECDH+aRSA+SHA384:EECDH+aRSA+SHA256:EECDH:DHE+AESGCM:DHE:!RSA!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS:!CAMELLIA:!SEED";

  location / {
    resolver 127.0.0.11 valid=30s;
    set $backend "http://imonnitTwilioConnector-server:${IMONNIT_TWILIO_CONNECTOR_PORT}";
    proxy_pass $backend;
    
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }
}

server {
  # Drop requests that do not match other servers
  listen 443 ssl default_server;
  ssl_reject_handshake on;
}
